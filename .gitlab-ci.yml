stages:
  - build
  - analyze
  - pre-deploy-int
  - deploy-int
  - tag-image-prod
  - pre-deploy-prod
  - deploy-prod
variables:
  #  Configuration spécifique projet
  PROJECT_NAME:
    value: datawarehouse
    description: "Nom du projet à déployer"
  PROJECT_VERSION:
    value: "1.1"
    description: "Version du projet à déployer"
  SERVER_ENV_INT:
    value: "int-monitorfish-datawarehouse01"
    description: "Serveur cible d'intégration"
  SERVER_ENV_PROD:
    value: "prod-monitorfish-datawarehouse01"
    description: "Serveur cible de production"
  TAG_VERSION: $NEXUS_DOCKER_REPO/$PROJECT_NAME:$PROJECT_VERSION
  GIT_STRATEGY: fetch

  #Anlayse Trivy
  FAIL_TRIVY_CONDITION_LIBRARY:
    value: "--severity HIGH,CRITICAL"
    description: "Détermine la commande à passer à Trivy pour bloquer ou non le job. --severity CRITICAL fait échouer le job si Trivy remonte des anomalies critiques."
  
  FAIL_TRIVY_CONDITION_OS:
    value: "--severity HIGH,CRITICAL"
    description: "Détermine la commande à passer à Trivy pour bloquer ou non le job. --severity CRITICAL fait échouer le job si Trivy remonte des anomalies critiques."

  #Analyse Sonar
  FAIL_SONAR_CONDITION:
    value: "-Dsonar.qualitygate.wait=true"
    description: "Détermine la commande à passer au scanner Sonar pour bloquer ou non le job. -Dsonar.qualitygate.wait=true fait échouer le job si le quality gate Sonar n'est pas conforme."


include:
  - "/.gitlab-ci/jobs/construction_image.yml"
  - "/.gitlab-ci/jobs/analyse_trivy.yml"
  - project: 'num3-exploitation/chaine-ci/template-analyse-deploiement'
    ref: main
    file: '/jobs/analyse_sonar.yml'
  - "/.gitlab-ci/jobs/deploiement_image_int.yml"
  - "/.gitlab-ci/jobs/deploiement_image_prod.yml"

analyse_trivy:
  variables:
    GIT_STRATEGY: fetch
